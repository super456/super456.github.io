import{_ as a,c as e,o as t,a6 as o}from"./chunks/framework.BOyJDVBP.js";const b=JSON.parse('{"title":"第 64 本《前端架构师：基础建设与架构设计思想》","description":"","frontmatter":{"title":"第 64 本《前端架构师：基础建设与架构设计思想》","cover":"/read-book/2024/front-end-architect.jpg","tags":[2024,"阅读"],"categories":["朝花夕拾"]},"headers":[],"relativePath":"posts/read-book/2024/front-end-architect.md","filePath":"posts/read-book/2024/front-end-architect.md","lastUpdated":1732628515000}'),r={name:"posts/read-book/2024/front-end-architect.md"},c=o('<h1 id="第-64-本《前端架构师-基础建设与架构设计思想》" tabindex="-1">第 64 本《前端架构师：基础建设与架构设计思想》 <a class="header-anchor" href="#第-64-本《前端架构师-基础建设与架构设计思想》" aria-label="Permalink to &quot;第 64 本《前端架构师：基础建设与架构设计思想》&quot;">​</a></h1><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>快速发展的红利、优胜劣汰的挑战、与生俱来的混乱、同混乱抗衡的规范……这些都是前端从业者无法逃避的现状。有人说，做好业务支撑是活在当下，而做好技术基建是活好未来。当业务量到达一定量级时，成为“规范制定者”，成为“思考者”，像“架构师”一样思考问题，才能最终成为“优胜者”。</p><p>《前端架构师：基础建设与架构设计思想》内容不是简单的思维模式输出，不是纯粹“阳春白雪”的理论，也不是社区搜索即得的 Webpack 配置罗列和原理复述，而是从项目痛点中提取出的基础建设的意义，以及从个人发展瓶颈中总结出的工程化架构和底层设计原理。本书不仅能帮助开发者夯实基础，还能为开发者实现技术进阶提供帮助和启发。</p><h2 id="阅读笔记" tabindex="-1">阅读笔记 <a class="header-anchor" href="#阅读笔记" aria-label="Permalink to &quot;阅读笔记&quot;">​</a></h2><p>对于每个前端开发工程师来说，也许都有个架构师的梦吧，反正我是有的😂。这本书恰好弥补了我对前端工程化建设上的很多技术视野和架构设计思想。因为工作上的原因，最近也在做技术方案调研、设计并实现从 0 到 1 客户端 E2E 自动化测试项目、全局撤销重做体系方案、实时自动化云存储方案等等。所以这本书给了我很大的帮助</p><p>随着前端领域日益发展，层出不穷的技术、框架变化等，很容易影响前端工程师对未来职业规划的走向和深根。然而，希望我们都能够关注那些底层东西：“万变不离其宗——永远是为用户界面服务的，永远是为提升生产效率服务的。”从而明确自己的方向，不断提升自己。前端工程化不是简单的一两句话可以描述清楚或是一个工具、一个库、一个脚手架能够解决的，更像是一个或一群项目体系化的工程，可大可小，能做的事情也是非常多的。毋庸置疑的是，随着行业及业务复杂度的升级，面对的挑战越来越多，前端工程师的天花板越来越高，对自身硬实力的要求也越来越高。非常建议新人可以尽早阅读这本书，可以让你站在山顶向下看整座山的风景一样，对前端职业金字塔的一个初步了解，从而慢慢建立自己的职业生涯规划，少走一些弯路，如果能够结合《程序员的 README》一起阅读就更好了，一个技术，一个理论，对新人入行非常友好和受益的两本书</p><p>这本书中的内容非常扎实，有很多真实案例和核心代码讲解梳理，也给了我很多架构设计建设的学习落地，比如设计思想中的拦截器思想、适配器思想、分层思想、中间件思想等。如何在团队中提升交互能力和效率，一直是个很难也需要长期建设的东西。开发需要规范化，流程需要标准化，项目需要工程化等等，不止是考验个人，更是考验一个团队技术能力，如何提升团队的瓶颈和个人的架构能力尤为重要了</p><p>美中不足的是，讲解的内容有点浅尝辄止，不够深入或片面而已，可能更像于提供技术视野和架构设计落地多一点吧。当然，一本书的内容也是有限的，更多的是能够从书中总结学习，举一反三、触类旁通吧。提供再多再好的实现方法思路，如果没有亲身实践落地，也只是纸上谈兵，只有学以致用，才能为当下及将来工作发挥更大的价值吧。</p><p>也许，我能成为前端架构师呢，未来谁知道呢😄</p>',10),n=[c];function d(s,i,p,_,h,l){return t(),e("div",{"data-pagefind-body":!0},n)}const m=a(r,[["render",d]]);export{b as __pageData,m as default};
