import{_ as n,D as o,c as r,o as l,j as s,I as a,a6 as t,a as i}from"./chunks/framework.BOyJDVBP.js";const v=JSON.parse('{"title":"CSS 之实现图片叠加的层叠层问题","description":"","frontmatter":{"title":"CSS 之实现图片叠加的层叠层问题","date":"2018-09-22T20:00:00.000Z","tag":["CSS"],"categories":["前端进击"]},"headers":[],"relativePath":"posts/growth-record/base/css/image-index.md","filePath":"posts/growth-record/base/css/image-index.md","lastUpdated":1713665060000}'),c={name:"posts/growth-record/base/css/image-index.md"},p=s("h1",{id:"css-之实现图片叠加的层叠层问题",tabindex:"-1"},[i("CSS 之实现图片叠加的层叠层问题 "),s("a",{class:"header-anchor",href:"#css-之实现图片叠加的层叠层问题","aria-label":'Permalink to "CSS 之实现图片叠加的层叠层问题"'},"​")],-1),d=s("p",null,"在工作中，也就是在微信小程序开发的时候经常用到图片叠加及层叠层的问题，但都比较好解决，就是没有好好研究其概念原理上的东西。因为自己技术及理解有限，也在网上找了很多参考资料，学习到了很多东西，简单分享一下。",-1),h=s("h3",{id:"一-实现效果",tabindex:"-1"},[i("（一）实现效果 "),s("a",{class:"header-anchor",href:"#一-实现效果","aria-label":'Permalink to "（一）实现效果"'},"​")],-1),_=s("p",null,"说明一下：是通过微信开发者工具展示的小程序效果；",-1),g=t(`<h3 id="二-实现分析" tabindex="-1">（二）实现分析 <a class="header-anchor" href="#二-实现分析" aria-label="Permalink to &quot;（二）实现分析&quot;">​</a></h3><p>1、效果图展示的是两张图片叠加（一个是上传的图片一个是右上角的删除按钮图标）。实现的方式也是很简单： 父级容器设置样式：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">position:relative;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">top:...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">left:...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">。。。（设置其他属性样式）</span></span></code></pre></div><p>子级容器设置样式（放两张图片的）： 第一张图片是设置样式是占满整个父级的所以不用设置position； 第二张图片就要设置<code>position:absolute;</code>（脱离常规文档流，当不会脱离父级下的文档流）</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">position:absoulte;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">top:...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">left:...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">。。。（其他样式）</span></span></code></pre></div><p>如果还需要设置层叠层显示问题，比如上面的子级容器下的第二张图片想越过父级容器设置并显示出来（因为文档流的问题）可以设置:<code>z-index:1;</code> 没设置前，删除符号会被遮挡：</p>`,6),k=s("p",null,"设置后，不会被遮挡了：",-1),b=t('<h3 id="三-推荐参考资料" tabindex="-1">（三）推荐参考资料 <a class="header-anchor" href="#三-推荐参考资料" aria-label="Permalink to &quot;（三）推荐参考资料&quot;">​</a></h3><ul><li><a href="https://juejin.im/post/5ba4efe36fb9a05cf52ac192" target="_blank" rel="noreferrer">CSS 中重要的层叠概念</a></li><li><a href="https://segmentfault.com/a/1190000013023485" target="_blank" rel="noreferrer">CSS中重要的BFC</a></li><li><a href="https://webdesign.tutsplus.com/zh-hans/articles/what-you-may-not-know-about-the-z-index-property--webdesign-16892" target="_blank" rel="noreferrer">关于z-index 那些你不知道的事</a></li></ul>',2);function m(E,u,f,S,x,C){const e=o("CustomImage");return l(),r("div",{"data-pagefind-body":!0},[p,d,h,_,a(e,{src:"/growth-record/base/css/image-index-01.gif"}),g,a(e,{src:"/growth-record/base/css/image-index-02.png"}),k,a(e,{src:"/growth-record/base/css/image-index-03.png"}),b])}const T=n(c,[["render",m]]);export{v as __pageData,T as default};
